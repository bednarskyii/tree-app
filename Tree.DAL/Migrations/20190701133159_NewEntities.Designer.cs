// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tree.DAL;

namespace Tree.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190701133159_NewEntities")]
    partial class NewEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tree.DAL.Entities.ConcreteEntities.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("Tree.DAL.Entities.ConcreteEntities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Tree.DAL.Entities.ConcreteEntities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Tree.DAL.Entities.ConcreteEntities.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Tree.DAL.Entities.ConcreteEntities.Offering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Offerings");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.BusinessLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessId");

                    b.Property<int>("IdBusiness");

                    b.Property<int>("IdParent");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ParentId");

                    b.ToTable("BusinessLayers");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.CountryLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<int>("IdCountry");

                    b.Property<int>("IdParent");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ParentId");

                    b.ToTable("CountryLayers");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.DepartmentLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("IdDepartment");

                    b.Property<int>("IdParent");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ParentId");

                    b.ToTable("DepartmentLayers");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.FamilyLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FamilyId");

                    b.Property<int>("IdFamily");

                    b.Property<int>("IdParent");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("ParentId");

                    b.ToTable("FamilyLayers");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.OfferingLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOffering");

                    b.Property<int>("IdParent");

                    b.Property<int?>("OfferingId");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("OfferingId");

                    b.HasIndex("ParentId");

                    b.ToTable("OfferingLayers");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Organizations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Tree.DAL.Entities.OrganizationsLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOrganization");

                    b.Property<int?>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationLayers");
                });

            modelBuilder.Entity("Tree.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.BusinessLayer", b =>
                {
                    b.HasOne("Tree.DAL.Entities.ConcreteEntities.Business", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessId");

                    b.HasOne("Tree.DAL.Entities.Layers.CountryLayer", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.CountryLayer", b =>
                {
                    b.HasOne("Tree.DAL.Entities.ConcreteEntities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Tree.DAL.Entities.OrganizationsLayer", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.DepartmentLayer", b =>
                {
                    b.HasOne("Tree.DAL.Entities.ConcreteEntities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Tree.DAL.Entities.Layers.OfferingLayer", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.FamilyLayer", b =>
                {
                    b.HasOne("Tree.DAL.Entities.ConcreteEntities.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("Tree.DAL.Entities.Layers.BusinessLayer", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Tree.DAL.Entities.Layers.OfferingLayer", b =>
                {
                    b.HasOne("Tree.DAL.Entities.ConcreteEntities.Offering", "Offering")
                        .WithMany()
                        .HasForeignKey("OfferingId");

                    b.HasOne("Tree.DAL.Entities.Layers.FamilyLayer", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Tree.DAL.Entities.OrganizationsLayer", b =>
                {
                    b.HasOne("Tree.DAL.Entities.Organizations", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
